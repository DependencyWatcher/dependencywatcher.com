#
# Copyright (c) 2015 DependencyWatcher
# All Rights Reserved.
# 

import re, string

class License(object):

    re_version = re.compile("(?:v|Version\s+)?(?<!\d)(\d{1,3}(?:\.[\d\.]+)?)(?!\d)", re.I)
    re_cleanup = re.compile("\(.*")
    re_license = re.compile("(?:\s+Li[sc]en[sc]e|The\s+)", re.I)

    shortcuts = dict([
        ("ASL", "Apache"),
        ("Apache Software", "Apache"),
        ("OpenLDAP Public", "OLDAP"),
        ("Non-Profit Open Software", "NPOSL"),
        ("Motif - New Modification Principle V", "NMPV"),
        ("Creative Commons Attribution-NonCommercial  International", "CC BY-NC"),
        ("SIL Open Font", "OFL"),
        ("Mozilla Public", "MPL"),
        ("Zope Public", "ZPL"),
        ("CUA Office Public", "CUA-OPL"),
        ("Entessa Public", "Entessa"),
        ("Sun Industry Standards Source", "SISSL"),
        ("Android SDK Agreement", "June"),
        ("LaTeX Project Public c", "LPPLc"),
        ("Common Public", "CPL"),
        ("Intel Open Source", "Intel"),
        ("Microsoft Reciprocal", "Ms-RL"),
        ("Open Public", "OPL"),
        ("Open Group Test Suite", "OGTSL"),
        ("Computer Associates Trusted Open Source", "CATOSL"),
        ("Attribution Assurance", "AAL"),
        ("Do What The F*ck You Want To Public", "WTFPL"),
        ("Standard ML of New Jersey", "SMLNJ"),
        ("Creative Commons CC  Universal", "CC"),
        ("BitTorrent Open Source", "BitTorrent"),
        ("Net Boolean Public", "NBPL"),
        ("gSOAP Public b", "gSOAPb"),
        ("Do What The F*ck You Want To Public", "WTFPL"),
        ("Independent JPEG Group", "IJG"),
        ("Ubuntu Font", "UFL"),
        ("Reciprocal Public", "RPL"),
        ("Facebook Terms of Service", "Statement of Rights and Responsibilities"),
        ("Eiffel Forum", "EFL"),
        ("Creative Commons Attribution-NonCommercial-ShareAlike  International", "CC BY-NC-SA"),
        ("IPA Font", "IPA"),
        ("ODC Public Domain Dedication &", "PDDL"),
        ("Microsoft Public", "Ms-PL"),
        ("Mozilla Public", "MPL"),
        ("GNU Free Documentation", "FDL"),
        ("Creative Commons Attribution NonCommercial", "CC-BY-NC"),
        ("Google Play Game Services", "May th,"),
        ("WC Software Notice and", "WC"),
        ("Sun Public", "SPL"),
        ("Lisp Lesser General Public", "LLGPL"),
        ("Microsoft Shared Source Community", "MS-CL"),
        ("Q Public", "QPL"),
        ("Beer Recipe", "BRL"),
        ("Creative Commons Attribution NonCommercial ShareAlike", "CC-NC-SA"),
        ("IBM PowerPC Initialization and Boot Software", "IBM-pibs"),
        ("GNU Affero General Public", "AGPL"),
        ("wxWindows Library", "WXwindows"),
        ("Academic Free", "AFL"),
        ("Freetype Project", "FTL"),
        ("Common Public Attribution", "CPAL"),
        ("Creative Commons Attribution-NoDerivatives  International", "CC BY-ND"),
        ("bzip", "original"),
        ("Creative Commons Attribution NonCommercial NoDerivs", "CC-NC-ND"),
        ("Creative Commons Attribution  Unported", "CC-BY"),
        ("Copyfree Open Innovation", "COIL"),
        ("Condor Public", "Condor"),
        ("Vovida Software", "VSL"),
        ("SIL Open Font", "OFL"),
        ("Netscape Public", "NPL"),
        ("Sybase Open Watcom Public", "Watcom"),
        ("Zlib-Libpng", "Zlib"),
        ("Erlang Public", "ErlPL"),
        ("Creative Commons Attribution-ShareAlike  International", "CC BY-SA"),
        ("The Code Project Open", "CPOL"),
        ("Apple Public Source", "APSL"),
        ("OPEN GAME LICENSE", "OGL"),
        ("XNet", "Xnet"),
        ("EU DataGrid Software", "EUDatagrid"),
        ("Historic Permission Notice and Disclaimer", "HPND"),
        ("Creative Commons Attribution  International", "CC BY"),
        ("GNU General Public", "GPL"),
        ("Ricoh Source Code Public", "RSCPL"),
        ("Naumen Public", "Naumen"),
        ("Yahoo! Public", "YPL"),
        ("Educational Community,", "ECL"),
        ("Nethack General Public", "NGPL"),
        ("BSD 3-Clause", "BSD New"),
        ("Zimbra Public", "Zimbra"),
        ("Adaptive Public", "APL"),
        ("Simple Public", "SimPL"),
        ("OCLC Research Public", "OCLC"),
        ("Creative Commons Attribution-NonCommercial  Generic", "CC BY-NC"),
        ("Frameworx Open", "Frameworx"),
        ("BSD -Clause", "BSD New"),
        ("European Union Public", "EUPL"),
        ("ODC Open Database", "ODbL"),
        ("Red Hat eCos Public", "RHeCos"),
        ("Eclipse Public", "EPL"),
        ("NASA Open Source Agreement", "NASA"),
        ("Free Art", "FAL"),
        ("SugarCRM Public", "SugarCRM"),
        ("Sax Public Domain Notice", "SAX-PD"),
        ("GNU Lesser General Public", "LGPL"),
        ("University of Illinois - NCSA Open Source", "NCSA"),
        ("Lucent Public", "LPL"),
        ("Creative Commons Attribution NoDerivs", "CC-ND"),
        ("CNRI Python", "CNRI-Python"),
        ("SGI Free Software B", "SGI-B"),
        ("Creative Commons Attribution Share Alike", "CC-SA"),
        ("RealNetworks Public Source", "RPSL"),
        ("IBM Public", "IPL"),
        ("Netizen Open Source", "NOSL"),
        ("GNU General Public", "GPL"),
        ("ANTLR Software Rights Notice", "ANTLR-PD"),
        ("Common Development and Distribution", "CDDL"),
        ("Open Software License", "OSL"),
        ("Nokia Open Source License", "NOKOS"),
    ])

    commercial_usage = dict([
        ("OLDAP v2.8", True),
        ("NPOSL v3.0", True),
        ("opencv", False),
        ("NMPV v1", False),
        ("Clarified Artistic", True),
        ("CC BY-NC v4.0", False),
        ("OFL v1.1", True),
        ("UStream Terms of Service", False),
        ("Peer Production", True),
        ("Multics", True),
        ("MPL v2.0", True),
        ("JZLib", False),
        ("ZPL v2.1", True),
        ("CeCILL v2", True),
        ("PHP v3.0", True),
        ("CUA-OPL v1.0", True),
        ("Entessa v1.0", True),
        ("SISSL v1.2", True),
        ("June v2014", False),
        ("LPPLc v1.3", True),
        ("CPL v1.0", True),
        ("Intel", True),
        ("Ms-RL", True),
        ("OPL v1.0", True),
        ("OGTSL", True),
        ("OpenSSL", True),
        ("CATOSL v1.1", True),
        ("AAL", True),
        ("WTFPL v2", True),
        ("SolidWorks EULA", False),
        ("SMLNJ", True),
        ("CC v0", True),
        ("No", False),
        ("Sleepycat", True),
        ("TrueCrypt v3.0", False),
        ("BitTorrent v1.1", True),
        ("NBPL v1", True),
        ("gSOAPb v1.3", True),
        ("Agate", True),
        ("XFree v86", True),
        ("WTFPL", True),
        ("IJG", True),
        ("UFL v1.0", False),
        ("SIP", False),
        ("RPL v1.5", True),
        ("AbCMS", False),
        ("EFL v2.0", True),
        ("OSL v3.0", True),
        ("CC BY-NC-SA v4.0", False),
        ("IPA", True),
        ("PDDL v1.0", True),
        ("Ms-PL", True),
        ("MPL v1.1", True),
        ("FDL v1.3", False),
        ("CC-BY-NC", False),
        ("May th, v15", False),
        ("WC v3", True),
        ("SPL v1.0", True),
        ("LLGPL", True),
        ("MirOS", True),
        ("MS-CL", False),
        ("QPL v1.0", False),
        ("BRL", True),
        ("CC-NC-SA", False),
        ("The JSON", True),
        ("IBM-pibs", True),
        ("AGPL v3", True),
        ("WXwindows", True),
        ("AFL v3.0", True),
        ("FTL", True),
        ("CPAL v1.0", False),
        ("CC BY-ND v4.0", True),
        ("original v2", True),
        ("Unlicense", True),
        ("NOKOS", True),
        ("CC-NC-ND", False),
        ("CC-BY v3.0", True),
        ("NTP", True),
        ("COIL v0.3", True),
        ("Condor v1.1", True),
        ("DBAD Public", False),
        ("VSL v1.0", True),
        ("OFL v1.1", True),
        ("NPL v1.1", True),
        ("Watcom v1.0", True),
        ("Zlib", True),
        ("Artistic v2.0", True),
        ("ErlPL v1.1", True),
        ("CC BY-SA v4.0", True),
        ("CPOL v1.02", True),
        ("Ruby", True),
        ("APSL v2.0", True),
        ("X v11", True),
        ("GG v1.0", True),
        ("OGL", True),
        ("MiTTY", False),
        ("Xnet v.", True),
        ("EUDatagrid", True),
        ("HPND", True),
        ("CC BY v4.0", True),
        ("GPL v2", True),
        ("RSCPL", True),
        ("Naumen", True),
        ("Fair", True),
        ("YPL v1.1", True),
        ("ECL v2.0", True),
        ("TOSG v2.0", True),
        ("NGPL", False),
        ("FreeBSD/Simplified v2", True),
        ("Zimbra v1.3", True),
        ("APL v1.0", True),
        ("SimPL v2.0", True),
        ("OCLC v2.0", True),
        ("Aladdin Free Public", False),
        ("Phpwscript", True),
        ("Boost Software v1.0", True),
        ("Python v2.0", True),
        ("CC BY-NC v2.0", False),
        ("Frameworx v1.0", True),
        ("Revised v3", True),
        ("Imlib v2", True),
        ("EUPL v1.1", True),
        ("ODbL", True),
        ("RHeCos v1.1", True),
        ("ISC", True),
        ("EPL v1.0", True),
        ("NASA v1.3", True),
        ("FAL", False),
        ("SugarCRM v1.1.3", True),
        ("Expat", True),
        ("MIT", True),
        ("PostgreSQL", True),
        ("SAX-PD", True),
        ("LGPL v2.1", True),
        ("NCSA", True),
        ("LPL v1.02", True),
        ("CC-ND", True),
        ("CNRI-Python", False),
        ("SGI-B v2.0", True),
        ("CC-SA", True),
        ("Apache v2.0", True),
        ("Beerware", True),
        ("RPSL v1.0", True),
        ("GL v2", False),
        ("IPL v1.0", True),
        ("NOSL", True),
        ("GPL", False),
        ("GPL v2", False),
        ("GPL v3", True),
        ("Peak EULA", False),
        ("ANTLR-PD", True),
        ("CDDL v1.0", True),
    ])

    def __init__(self, license):
        self.original = license
        self.normalized = self._normalize(license)

    def _normalize(self, license):
        if license is not None:
            license = self.re_license.sub("", license)

            version = None
            m = self.re_version.search(license)
            if m:
                version = m.group(1)
                license = self.re_version.sub("", license)

            license = self.re_cleanup.sub("", license)

            for l in license.split(","):
                l = l.strip(string.whitespace + string.punctuation)
                if l in self.shortcuts:
                    license = self.shortcuts[l]
                    break

            license = license.strip(string.whitespace + string.punctuation)
            if version is not None:
                license = "%s v%s" % (license, version)
        return license

    def is_valid_for_commercial_use(self):
        if self.normalized in self.commercial_usage:
            return self.commercial_usage[self.normalized]
        return True

